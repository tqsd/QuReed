"""
{{ device }}
 created with template
"""
from typing import Union
from qureed.devices import (GenericDevice,
                           schedule_next_event,
                           coordinate_gui,
                           log_action)

from qureed.devices.port import Port
from qureed.signals import *


class {{ class_name }}(GenericDevice):
    ports = {
        {% for label, signal in input_ports.items() %}
        "{{ label }}": Port(
            label="{{ label }}",
            direction="input",
            signal=None,
            signal_type={{ signal }},
            device=None),
        {% endfor %}
        {% for label, signal in output_ports.items() %}
        "{{ label }}": Port(
            label="{{ label }}",
            direction="output",  # Changed from "input" to "output" for clarity
            signal=None,
            signal_type={{ signal }},
            device=None),
        {% endfor %}
    }
    
    gui_icon = {{ gui_icon }}
    gui_name = "{{ name }}"
    gui_tags = [
    {% for tag in tags -%}
       "{{ tag }}",
    {% endfor %}
    ]
    gui_documentation = None
    
    power_peak = 0
    power_average = 0
    
    reference = None
      
    @log_action
    @schedule_next_event
    def des(self, time, *args, **kwargs):
        """
        Implement to use discrete event simulation
        """
        pass

    @log_action
    @schedule_next_event
    def des_action(self, time=None, *args, **kwargs):
        """
        Or implement this if you are implementing a trigger
        """
        pass
